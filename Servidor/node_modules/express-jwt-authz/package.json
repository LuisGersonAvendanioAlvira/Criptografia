{
  "_from": "express-jwt-authz",
  "_id": "express-jwt-authz@2.3.1",
  "_inBundle": false,
  "_integrity": "sha512-cChqAjXe8E3KDe4XbmkpYpk/vQdy4s3n1ccxVgij+2F0rS86hiOQvTrYnHBc1jZstqpGrOzLgHMByh046fKgyQ==",
  "_location": "/express-jwt-authz",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "express-jwt-authz",
    "fetchSpec": "latest",
    "name": "express-jwt-authz",
    "raw": "express-jwt-authz",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/express-jwt-authz/-/express-jwt-authz-2.3.1.tgz",
  "_shasum": "b23e5b93646700acf3564a2e33479ae3e217614f",
  "_shrinkwrap": null,
  "_spec": "express-jwt-authz",
  "_where": "/home/arquitectura/Escritorio/Proyecto Criptografia/Tienda/Servidor",
  "author": {
    "name": "Damian Schenkelman"
  },
  "bugs": {
    "url": "https://github.com/auth0/express-jwt-authz/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "Validate a JWTs scope to authorize access to an endpoint",
  "devDependencies": {
    "chai": "^4.2.0",
    "husky": "^1.1.2",
    "mocha": "^5.2.0",
    "prettier": "^1.14.3",
    "pretty-quick": "^1.8.0"
  },
  "engines": {
    "node": ">=6"
  },
  "homepage": "https://github.com/auth0/express-jwt-authz#readme",
  "husky": {
    "hooks": {
      "pre-commit": "pretty-quick --staged"
    }
  },
  "keywords": [
    "authorization",
    "express",
    "jwt"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "name": "express-jwt-authz",
  "optionalDependencies": {},
  "peerDependencies": {
    "express": "^4.0.0"
  },
  "readme": "# express-jwt-authz ![](https://travis-ci.org/auth0/express-jwt-authz.svg?branch=master)\n\nValidate a JWTs `scope` to authorize access to an endpoint.\n\n## Install\n\n    $ npm install express-jwt-authz\n\n> `express@^4.0.0` is a peer dependency. Make sure it is installed in your project.\n\n## Usage\n\nUse together with [express-jwt](https://github.com/auth0/express-jwt) to both validate a JWT and make sure it has the correct permissions to call an endpoint.\n\n```javascript\nvar jwt = require('express-jwt');\nvar jwtAuthz = require('express-jwt-authz');\n\nvar options = {};\napp.get('/users',\n  jwt({ secret: 'shared_secret' }),\n  jwtAuthz([ 'read:users' ], options),\n  function(req, res) { ... });\n```\n\nIf multiple scopes are provided, the user must have _any_ the required scopes.\n\n```javascript\napp.post('/users',\n  jwt({ secret: 'shared_secret' }),\n  jwtAuthz([ 'read:users', 'write:users' ], {}),\n  function(req, res) { ... });\n\n// This user will be denied access\nvar authorizedUser = {\n  scope: 'read:users'\n};\n```\n\nTo check that the user has _all_ the scopes provided, use the `checkAllScopes: true` option:\n\n```javascript\napp.post('/users',\n  jwt({ secret: 'shared_secret' }),\n  jwtAuthz([ 'read:users', 'write:users' ], { checkAllScopes: true }),\n  function(req, res) { ... });\n\n// This user will have access\nvar authorizedUser = {\n  scope: 'read:users write:users'\n};\n\n// This user will NOT have access\nvar unauthorizedUser = {\n  scope: 'read:users'\n};\n```\n\nThe JWT must have a `scope` claim and it must either be a string of space-separated permissions or an array of strings. For example:\n\n```\n// String:\n\"write:users read:users\"\n\n// Array:\n[\"write:users\", \"read:users\"]\n```\n\n## Options\n\n- `failWithError`: When set to `true`, will forward errors to `next` instead of ending the response directly. Defaults to `false`.\n- `checkAllScopes`: When set to `true`, all the expected scopes will be checked against the user's scopes. Defaults to `false`.\n- `customScopeKey`: The property name to check for the scope. By default, permissions are checked against `user.scope`, but you can change it to be `user.myCustomScopeKey` with this option. Defaults to `scope`.\n\n## Issue Reporting\n\nIf you have found a bug or if you have a feature request, please report them at this repository issues section. Please do not report security vulnerabilities on the public GitHub issue tracker. The [Responsible Disclosure Program](https://auth0.com/whitehat) details the procedure for disclosing security issues.\n\n## Author\n\n[Auth0](https://auth0.com)\n\n## License\n\nThis project is licensed under the MIT license. See the [LICENSE](LICENSE) file for more info.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/auth0/express-jwt-authz.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "2.3.1"
}
